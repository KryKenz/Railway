("‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ ŒΩ‚Ñì–∫—É—è—î –≤œÉ—Ç –≤—É –∫—èy–∫—îŒ∑z ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé");
/*
‚ïî‚ßâ‡ºª [ ùêïùê•ùê§ùê≤ùê´ùêûüïäÔ∏èùêåùêÆùê•ùê≠ùê¢ùêÉùêûùêØùê¢ùêúùêû ùêÄùêèùêà ] ùê¢ùê¨ ùêö ùêñùê°ùêöùê≠ùê¨ùêöùê©ùê© ùêåùêÆùê•ùê≠ùê¢ùêèùêÆùê´ùê©ùê®ùê¨ùêû-ùêîùê¨ùêûùê´ùêõùê®ùê≠ ùê∞ùê¢ùê≠ùê° ùêåùê®ùêùùêûùê´ùêöùê≠ùê¢ùê®ùêß,ùêÄùêÆùê≠ùê®ùê¶ùêöùê≠ùê¢ùê®ùêß ùêöùêßùêù ùüèùüéùüé+ ùê¶ùê®ùê´ùêû ùêúùê®ùê¶ùê¶ùêöùêßùêùùê¨! 
‚ïë üêûùêÉùêûùêØùêûùê•ùê®ùê©ùêûùê´ùê¨ +918436686758,917430922909
‚ïë 
‚ïë We won't be responsible for any kind of ban due to this bot.
‚ïë ŒΩ‚Ñì–∫—É—è—î was made for fun purpose and to make group management easier.
‚ïë It's your concern if you spam and gets your account banned.
‚ïë Also, Forks won't be entertained.
‚ïë If you fork this repo and edit plugins, it's your concern for further updates.
‚ïë Forking Repo is fine. But if you edit something we will not provide any help.
‚ïë In short, Fork At Your Own Risk.
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
*/
("‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ ŒΩ‚Ñì–∫—É—è—î –≤œÉ—Ç –≤—É –∫—èy–∫—îŒ∑z ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé");
var { proto, delay, getContentType } = require("@adiwajshing/baileys");
var { sizeFormatter } = require("human-readable");
var { defaultMaxListeners } = require("stream");
var child_process = require("child_process");
var moment = require("moment-timezone");
var { unlink } = require("fs").promises;
var ffmpeg = require("fluent-ffmpeg");
var Crypto = require("crypto");
var chalk = require("chalk");
var axios = require("axios");
var util = require("util");
var jimp = require("jimp");
var fs = require("fs");
("‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ ŒΩ‚Ñì–∫—É—è—î –≤œÉ—Ç –≤—É –∫—èy–∫—îŒ∑z ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé");
var unixTimestampSeconds = (date = new Date()) =>
  Math.floor(date.getTime() / 1000);
var sleep = (ms) => {
  return new Promise((resolve) => {
    setTimeout(resolve, ms);
  });
};
exports.unixTimestampSeconds = unixTimestampSeconds;

exports.generateMessageTag = (epoch) => {
  let tag = (0, exports.unixTimestampSeconds)().toString();
  if (epoch) tag += ".--" + epoch;
  return tag;
};

exports.processTime = (timestamp, now) => {
  return moment.duration(now - moment(timestamp * 1000)).asSeconds();
};

exports.getRandom = (ext) => {
  return `${Math.floor(Math.random() * 10000)}${ext}`;
};

exports.getBuffer = async (url, options) => {
  try {
    options ? options : {};
    var res = await axios({
      method: "get",
      url,
      headers: {
        DNT: 1,
        "Upgrade-Insecure-Request": 1,
      },
      ...options,
      responseType: "arraybuffer",
    });
    return res.data;
  } catch (err) {
    return err;
  }
};

exports.fetchJson = async (url, options) => {
  try {
    options ? options : {};
    var res = await axios({
      method: "GET",
      url: url,
      headers: {
        "User-Agent":
          "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36",
      },
      ...options,
    });
    return res.data;
  } catch (err) {
    return err;
  }
};

exports.runtime = function (seconds) {
  seconds = Number(seconds);
  var d = Math.floor(seconds / (3600 * 24));
  var h = Math.floor((seconds % (3600 * 24)) / 3600);
  var vc–Ωa—Ç = Math.floor((seconds % 3600) / 60);
  var s = Math.floor(seconds % 60);
  var dDisplay = d > 0 ? d + (d == 1 ? " day, " : " days, ") : "";
  var hDisplay = h > 0 ? h + (h == 1 ? " hour, " : " hours, ") : "";
  var mDisplay =
    vc–Ωa—Ç > 0 ? vc–Ωa—Ç + (vc–Ωa—Ç == 1 ? " minute, " : " minutes, ") : "";
  var sDisplay = s > 0 ? s + (s == 1 ? " second" : " seconds") : "";
  return dDisplay + hDisplay + mDisplay + sDisplay;
};

exports.clockString = function (seconds) {
  let h = isNaN(seconds) ? "--" : Math.floor((seconds % (3600 * 24)) / 3600);
  let vc–Ωa—Ç = isNaN(seconds) ? "--" : Math.floor((seconds % 3600) / 60);
  let s = isNaN(seconds) ? "--" : Math.floor(seconds % 60);
  return [h, vc–Ωa—Ç, s].map((v) => v.toString().padStart(2, 0)).join(":");
};

exports.sleep = async (ms) => {
  return new Promise((resolve) => setTimeout(resolve, ms));
};

exports.isUrl = (url) => {
  return url.match(
    new RegExp(
      /https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)/,
      "gi"
    )
  );
};

exports.getTime = (format, date) => {
  if (date) {
    return moment(date).locale("id").format(format);
  } else {
    return moment.tz("Asia/Jakarta").locale("id").format(format);
  }
};

exports.formatDate = (n, locale = "id") => {
  let d = new Date(n);
  return d.toLocaleDateString(locale, {
    weekday: "long",
    day: "numeric",
    month: "long",
    year: "numeric",
    hour: "numeric",
    minute: "numeric",
    second: "numeric",
  });
};

exports.formatp = sizeFormatter({
  std: "JEDEC", //'SI' = default | 'IEC' | 'JEDEC'
  decimalPlaces: 2,
  keepTrailingZeroes: false,
  render: (literal, symbol) => `${literal} ${symbol}B`,
});

exports.jsonformat = (string) => {
  return JSON.stringify(string, null, 2);
};

function format(...args) {
  return util.format(...args);
}

exports.logic = (check, inp, out) => {
  if (inp.length !== out.length)
    throw new Error("Input and Output must have same length");
  for (let i in inp) if (util.isDeepStrictEqual(check, inp[i])) return out[i];
  return null;
};

exports.generateProfilePicture = async (buffer) => {
  var jimp = await jimp_1.read(buffer);
  var min = jimp.getWidth();
  var max = jimp.getHeight();
  var cropped = jimp.crop(0, 0, min, max);
  return {
    img: await cropped.scaleToFit(720, 720).getBufferAsync(jimp_1.MIME_JPEG),
    preview: await cropped
      .scaleToFit(720, 720)
      .getBufferAsync(jimp_1.MIME_JPEG),
  };
};

exports.bytesToSize = (bytes, decimals = 2) => {
  if (bytes === 0) return "0 Bytes";

  var k = 1024;
  var dm = decimals < 0 ? 0 : decimals;
  var sizes = ["Bytes", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"];

  var i = Math.floor(Math.log(bytes) / Math.log(k));

  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + " " + sizes[i];
};

exports.getSizeMedia = (path) => {
  return new Promise((resolve, reject) => {
    if (/http/.test(path)) {
      axios.get(path).then((res) => {
        let length = parseInt(res.headers["content-length"]);
        let size = exports.bytesToSize(length, 3);
        if (!isNaN(length)) resolve(size);
      });
    } else if (Buffer.isBuffer(path)) {
      let length = Buffer.byteLength(path);
      let size = exports.bytesToSize(length, 3);
      if (!isNaN(length)) resolve(size);
    } else {
      reject("error gatau apah");
    }
  });
};

exports.parseMention = (text = "") => {
  return [...text.matchAll(/@([0-9]{5,16}|0)/g)].map(
    (v) => v[1] + "@s.whatsapp.net"
  );
};

exports.GIFBufferToVideoBuffer = async (image) => {
  var filename = `${Math.random().toString(36)}`;
  await fs.writeFileSync(`./Bin/${filename}.gif`, image);
  child_process.exec(
    `ffmpeg -i ./Bin/${filename}.gif -movflags faststart -pix_fmt yuv420p -vf "scale=trunc(iw/2)*2:trunc(ih/2)*2" ./Bin/${filename}.mp4`
  );
  await sleep(4000);

  var buffer5 = await fs.readFileSync(`./Bin/${filename}.mp4`);
  Promise.all([
    unlink(`./Bin/${filename}.mp4`),
    unlink(`./Bin/${filename}.gif`),
  ]);
  return buffer5;
};
("‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ ŒΩ‚Ñì–∫—É—è—î –≤œÉ—Ç –≤—É –∫—èy–∫—îŒ∑z ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé");
exports.ŒΩkmake = async (ŒΩ‚Ñì–∫—É—è—î, vc–Ωa—Ç, store) => {
  if (!vc–Ωa—Ç) return vc–Ωa—Ç;
  let ŒΩproto = proto.WebMessageInfo;
  if (vc–Ωa—Ç.key) {
    vc–Ωa—Ç.id = vc–Ωa—Ç.key.id;
    vc–Ωa—Ç.isBaileys = vc–Ωa—Ç.id.startsWith("BAE5") && vc–Ωa—Ç.id.length === 16;
    vc–Ωa—Ç.chat = vc–Ωa—Ç.key.remoteJid;
    vc–Ωa—Ç.fromMe = vc–Ωa—Ç.key.fromMe;
    vc–Ωa—Ç.isGroup = vc–Ωa—Ç.chat.endsWith("@g.us");
    vc–Ωa—Ç.sender = ŒΩ‚Ñì–∫—É—è—î.decodeJid(
      (vc–Ωa—Ç.fromMe && ŒΩ‚Ñì–∫—É—è—î.user.id) ||
        vc–Ωa—Ç.participant ||
        vc–Ωa—Ç.key.participant ||
        vc–Ωa—Ç.chat ||
        ""
    );
    if (vc–Ωa—Ç.isGroup)
      vc–Ωa—Ç.participant = ŒΩ‚Ñì–∫—É—è—î.decodeJid(vc–Ωa—Ç.key.participant) || "";
  }
  if (vc–Ωa—Ç.message) {
    vc–Ωa—Ç.mtype = getContentType(vc–Ωa—Ç.message);
    vc–Ωa—Ç.msg =
      vc–Ωa—Ç.mtype == "viewOnceMessage"
        ? vc–Ωa—Ç.message[vc–Ωa—Ç.mtype].message[
            getContentType(vc–Ωa—Ç.message[vc–Ωa—Ç.mtype].message)
          ]
        : vc–Ωa—Ç.message[vc–Ωa—Ç.mtype];
    vc–Ωa—Ç.body =
      vc–Ωa—Ç.message.conversation ||
      vc–Ωa—Ç.msg.caption ||
      vc–Ωa—Ç.msg.text ||
      (vc–Ωa—Ç.mtype == "listResponseMessage" &&
        vc–Ωa—Ç.msg.singleSelectReply.selectedRowId) ||
      (vc–Ωa—Ç.mtype == "buttonsResponseMessage" &&
        vc–Ωa—Ç.msg.selectedButtonId) ||
      (vc–Ωa—Ç.mtype == "viewOnceMessage" && vc–Ωa—Ç.msg.caption) ||
      vc–Ωa—Ç.text;
    let quoted = (vc–Ωa—Ç.quoted = vc–Ωa—Ç.msg.contextInfo
      ? vc–Ωa—Ç.msg.contextInfo.quotedMessage
      : null);
    vc–Ωa—Ç.mentionedJid = vc–Ωa—Ç.msg.contextInfo
      ? vc–Ωa—Ç.msg.contextInfo.mentionedJid
      : [];
    if (vc–Ωa—Ç.quoted) {
      let type = getContentType(quoted);
      vc–Ωa—Ç.quoted = vc–Ωa—Ç.quoted[type];
      if (["productMessage"].includes(type)) {
        type = getContentType(vc–Ωa—Ç.quoted);
        vc–Ωa—Ç.quoted = vc–Ωa—Ç.quoted[type];
      }
      if (typeof vc–Ωa—Ç.quoted === "string")
        vc–Ωa—Ç.quoted = {
          text: vc–Ωa—Ç.quoted,
        };
      vc–Ωa—Ç.quoted.mtype = type;
      vc–Ωa—Ç.quoted.id = vc–Ωa—Ç.msg.contextInfo.stanzaId;
      vc–Ωa—Ç.quoted.chat = vc–Ωa—Ç.msg.contextInfo.remoteJid || vc–Ωa—Ç.chat;
      vc–Ωa—Ç.quoted.isBaileys = vc–Ωa—Ç.quoted.id
        ? vc–Ωa—Ç.quoted.id.startsWith("BAE5") && vc–Ωa—Ç.quoted.id.length === 16
        : false;
      vc–Ωa—Ç.quoted.sender = ŒΩ‚Ñì–∫—É—è—î.decodeJid(
        vc–Ωa—Ç.msg.contextInfo.participant
      );
      vc–Ωa—Ç.quoted.fromMe =
        vc–Ωa—Ç.quoted.sender === (ŒΩ‚Ñì–∫—É—è—î.user && ŒΩ‚Ñì–∫—É—è—î.user.id);
      vc–Ωa—Ç.quoted.text =
        vc–Ωa—Ç.quoted.text ||
        vc–Ωa—Ç.quoted.caption ||
        vc–Ωa—Ç.quoted.conversation ||
        vc–Ωa—Ç.quoted.contentText ||
        vc–Ωa—Ç.quoted.selectedDisplayText ||
        vc–Ωa—Ç.quoted.title ||
        "";
      vc–Ωa—Ç.quoted.mentionedJid = vc–Ωa—Ç.msg.contextInfo
        ? vc–Ωa—Ç.msg.contextInfo.mentionedJid
        : [];
      vc–Ωa—Ç.getQuotedObj = vc–Ωa—Ç.getQuotedMessage = async () => {
        if (!vc–Ωa—Ç.quoted.id) return false;
        let q = await store.loadMessage(vc–Ωa—Ç.chat, vc–Ωa—Ç.quoted.id, ŒΩ‚Ñì–∫—É—è—î);
        return exports.ŒΩkmake(ŒΩ‚Ñì–∫—É—è—î, q, store);
      };
      let vM = (vc–Ωa—Ç.quoted.fakeObj = ŒΩproto.fromObject({
        key: {
          remoteJid: vc–Ωa—Ç.quoted.chat,
          fromMe: vc–Ωa—Ç.quoted.fromMe,
          id: vc–Ωa—Ç.quoted.id,
        },
        message: quoted,
        ...(vc–Ωa—Ç.isGroup ? { participant: vc–Ωa—Ç.quoted.sender } : {}),
      }));
      vc–Ωa—Ç.quoted.delete = () =>
        ŒΩ‚Ñì–∫—É—è—î.sendMessage(vc–Ωa—Ç.quoted.chat, { delete: vM.key });
      vc–Ωa—Ç.quoted.copyNForward = (jid, forceForward = false, options = {}) =>
        ŒΩ‚Ñì–∫—É—è—î.copyNForward(jid, vM, forceForward, options);
      vc–Ωa—Ç.quoted.download = () => ŒΩ‚Ñì–∫—É—è—î.downloadMediaMessage(vc–Ωa—Ç.quoted);
    }
  }

  if (vc–Ωa—Ç.msg.url)
    vc–Ωa—Ç.download = () => ŒΩ‚Ñì–∫—É—è—î.downloadMediaMessage(vc–Ωa—Ç.msg);
  vc–Ωa—Ç.text =
    vc–Ωa—Ç.msg.text ||
    vc–Ωa—Ç.msg.caption ||
    vc–Ωa—Ç.message.conversation ||
    vc–Ωa—Ç.msg.contentText ||
    vc–Ωa—Ç.msg.selectedDisplayText ||
    vc–Ωa—Ç.msg.title ||
    "";
  vc–Ωa—Ç.reply = (text, chatId = vc–Ωa—Ç.chat, options = {}) =>
    Buffer.isBuffer(text)
      ? ŒΩ‚Ñì–∫—É—è—î.sendMedia(chatId, text, "file", "", vc–Ωa—Ç, { ...options })
      : ŒΩ‚Ñì–∫—É—è—î.sendText(chatId, text, vc–Ωa—Ç, { ...options });
  vc–Ωa—Ç.copy = () =>
    exports.ŒΩkmake(ŒΩ‚Ñì–∫—É—è—î, ŒΩproto.fromObject(ŒΩproto.toObject(vc–Ωa—Ç)));
  vc–Ωa—Ç.copyNForward = (
    jid = vc–Ωa—Ç.chat,
    forceForward = false,
    options = {}
  ) => ŒΩ‚Ñì–∫—É—è—î.copyNForward(jid, vc–Ωa—Ç, forceForward, options);

  return vc–Ωa—Ç;
};

let file = require.resolve(__filename);
fs.watchFile(file, () => {
  fs.unwatchFile(file);
  console.log(chalk.redBright(`Update ${__filename}`));
  delete require.cache[file];
  require(file);
});
("‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ ŒΩ‚Ñì–∫—É—è—î –≤œÉ—Ç –≤—É –∫—èy–∫—îŒ∑z ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé");
/*
‚ïî‚ßâ‡ºª [ ùêïùê•ùê§ùê≤ùê´ùêûüïäÔ∏èùêåùêÆùê•ùê≠ùê¢ùêÉùêûùêØùê¢ùêúùêû ùêÄùêèùêà ] ùê¢ùê¨ ùêö ùêñùê°ùêöùê≠ùê¨ùêöùê©ùê© ùêåùêÆùê•ùê≠ùê¢ùêèùêÆùê´ùê©ùê®ùê¨ùêû-ùêîùê¨ùêûùê´ùêõùê®ùê≠ ùê∞ùê¢ùê≠ùê° ùêåùê®ùêùùêûùê´ùêöùê≠ùê¢ùê®ùêß,ùêÄùêÆùê≠ùê®ùê¶ùêöùê≠ùê¢ùê®ùêß ùêöùêßùêù ùüèùüéùüé+ ùê¶ùê®ùê´ùêû ùêúùê®ùê¶ùê¶ùêöùêßùêùùê¨! 
‚ïë üêûùêÉùêûùêØùêûùê•ùê®ùê©ùêûùê´ùê¨ +918436686758,917430922909
‚ïë 
‚ïë We won't be responsible for any kind of ban due to this bot.
‚ïë ŒΩ‚Ñì–∫—É—è—î was made for fun purpose and to make group management easier.
‚ïë It's your concern if you spam and gets your account banned.
‚ïë Also, Forks won't be entertained.
‚ïë If you fork this repo and edit plugins, it's your concern for further updates.
‚ïë Forking Repo is fine. But if you edit something we will not provide any help.
‚ïë In short, Fork At Your Own Risk.
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
*/
("‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ ŒΩ‚Ñì–∫—É—è—î –≤œÉ—Ç –≤—É –∫—èy–∫—îŒ∑z ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé");
